// @ts-nocheck
/* eslint-disable */
import configureMockStore from 'redux-mock-store';
import thunk from 'redux-thunk';

const initialState = {
  common: {
    app: {
      loadingDepth: 1,
      error: null,
      unexpectedError: null,
      confirmDialog: null,
    },
    accessControl: {
      permission: {
        viewAttTimeSheetByDelegate: false,
        editAttTimeSheetByDelegate: false,
        viewTimeTrackByDelegate: false,
        editTimeTrackByDelegate: false,
        submitAttDailyRequestByDelegate: false,
        cancelAttDailyRequestByDelegate: false,
        approveSelfAttDailyRequestByEmployee: false,
        approveAttDailyRequestByDelegate: false,
        cancelAttDailyApprovalByEmployee: false,
        cancelAttDailyApprovalByDelegate: false,
        approveSelfAttRequestByEmployee: false,
        submitAttRequestByDelegate: false,
        cancelAttRequestByDelegate: false,
        approveAttRequestByDelegate: false,
        cancelAttApprovalByEmployee: false,
        cancelAttApprovalByDelegate: false,
        submitTimeRequestByDelegate: false,
        cancelTimeRequestByDelegate: false,
        cancelTimeApprovalByEmployee: false,
        cancelTimeApprovalByDelegate: false,
        manageOverallSetting: false,
        switchCompany: false,
        manageDepartment: false,
        manageEmployee: false,
        manageCalendar: false,
        manageJobType: false,
        manageJob: false,
        manageMobileSetting: false,
        managePermission: false,
        managePlannerSetting: false,
        manageAttLeave: false,
        manageAttShortTimeWorkSetting: false,
        manageAttLeaveOfAbsence: false,
        manageAttWorkingType: false,
        manageAttPattern: false,
        manageAttAgreementAlertSetting: false,
        manageAttLeaveGrant: false,
        manageAttShortTimeWorkSettingApply: false,
        manageAttLeaveOfAbsenceApply: false,
        manageAttPatternApply: false,
        manageTimeSetting: false,
        manageTimeWorkCategory: false,
        manageExpTypeGroup: false,
        manageExpenseType: false,
        manageTaxType: false,
        manageExpSetting: false,
        manageExchangeRate: false,
        manageAccountingPeriod: false,
        manageReportType: false,
        manageCostCenter: false,
        manageVendor: false,
        manageExtendedItem: false,
        manageEmployeeGroup: false,
        manageExpCreditCard: false,
        manageExpCustomHint: false,
        managePsaSetting: false,
        managePsaJobGrade: false,
        managePsaSkillset: false,
        managePsaGroup: false,
        canBulkApproveAttRequest: false,
        canBulkApproveAttDailyRequest: false,
      },
    },
    dialog: {
      show: false,
    },
    delegateApprovalDialog: {
      isNewAssignment: false,
    },
    empInfo: {
      isFetching: false,
      didInvalidate: false,
      record: {},
      startDayOfTheWeek: 0,
    },
    proxyEmployeeInfo: {
      isProxyMode: false,
      id: '',
      employeeCode: '',
      employeeName: '',
      employeePhotoUrl: '',
      departmentCode: '',
      departmentName: '',
      title: '',
      managerName: '',
    },
    targetEmpId: '',
    approverEmployeeSetting: {
      entities: {
        id: '',
        employeeName: '',
      },
      ui: {
        dialog: {
          isOpen: false,
          type: '',
        },
        status: {
          isReadOnly: true,
          targetDate: '',
        },
      },
    },
    approverEmployeeSearch: {
      ui: {
        dialog: {
          isOpen: false,
          type: '',
        },
        operation: {
          searchStrategy: 1,
          isSearchByQueriesExecuted: false,
          departmentCode: '',
          departmentName: '',
          employeeCode: '',
          employeeName: '',
          title: '',
          targetDate: '',
          selectedEmployeeId: '',
          isOverLimit: false,
        },
      },
      entities: {
        allIds: [],
        byId: {},
      },
    },
    approvalHistoryList: [],
    jobList: [],
    expTypeList: [],
    expTaxTypeList: [],
    costCenterList: [],
    selectedTab: 'NONE',
    currencyList: [],
    suggestInput: {
      origin: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
      arrival: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
      via1: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
      via2: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
      via3: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
      via4: {
        selectSuggestion: {},
        suggestions: [],
        status: 'INITIAL',
        value: '',
      },
    },
    searchedRoute: {},
    standaloneMode: {
      enabled: false,
    },
    stationHistoryList: [],
    userSetting: {
      useWorkTime: true,
      useTransitManager: true,
      userName: 'test-no8pmcz5dcj8@example.com',
      useReceiptScan: false,
      usePsa: true,
      usePlanner: true,
      useMasterCardImport: false,
      useExpenseRequest: true,
      useExpense: true,
      useAttendance: true,
      timeZone: 'Asia/Singapore',
      salesId: 'bm',
      photoUrl:
        'https://customer-saas-1827-dev-ed--c.documentforce.com/profilephoto/005/T',
      organization: {
        isSandbox: true,
        id: '00D6D0000001ETjUAM',
        enableErrorTracking: false,
      },
      name: 'User User',
      managerName: 'Sista Aadmi',
      locale: 'en-SG',
      language: 'en-US',
      id: '0056D000002cwwmQAA',
      expTaxRoundingSetting: 'Round',
      expRoundingSetting: 'Round',
      expAttendanceValidation: true,
      employeeName: 'Sista Aadmi',
      employeeId: 'a0b6D0000017HOtQAM',
      employeeCode: 'TDEMP000',
      departmentName: 'DEPARTMENT QA',
      departmentId: 'a0Z6D0000013O9FUAU',
      departmentCode: 'DEP001',
      customerId: 'TeamS01',
      currencySymbol: 'JPY',
      currencyName: 'Japanese Yen',
      currencyId: 'a0U6D000003ak1nUAA',
      currencyDecimalPlaces: 0,
      currencyCode: 'JPY',
      costCenterName: null,
      costCenterHistoryId: null,
      costCenterCode: null,
      companyName: 'WSP AUTO API',
      companyId: 'a0P6D000001sZhNUAU',
      belongsToResourceGroup: true,
      approver01Name: null,
      allowToChangeApproverSelf: null,
      allowTaxAmountChange: true,
      allowApproveExpInDiffCompany: null,
    },
    personalSetting: {
      plannerDefaultView: 'Weekly',
    },
    personalSettingDialog: {
      isVisible: false,
      selectedGroup: 'TIME_TRACKING',
      newPersonalSetting: {
        plannerDefaultView: 'Weekly',
      },
    },
    jobSelectDialog: {
      isVisible: false,
    },
    stampWidget: {
      isEnableStartStamp: false,
      isEnableEndStamp: false,
      isEnableRestartStamp: false,
      mode: null,
      message: '',
    },
    toast: {
      isShow: false,
      message: '',
    },
  },
  userSetting: {
    useWorkTime: true,
    useTransitManager: true,
    userName: 'test-no8pmcz5dcj8@example.com',
    useReceiptScan: false,
    usePsa: true,
    usePlanner: true,
    useMasterCardImport: false,
    useExpenseRequest: true,
    useExpense: true,
    useAttendance: true,
    timeZone: 'Asia/Singapore',
    salesId: 'bm',
    photoUrl:
      'https://customer-saas-1827-dev-ed--c.documentforce.com/profilephoto/005/T',
    organization: {
      isSandbox: true,
      id: '00D6D0000001ETjUAM',
      enableErrorTracking: false,
    },
    name: 'User User',
    managerName: 'Sista Aadmi',
    locale: 'en-SG',
    language: 'en-US',
    id: '0056D000002cwwmQAA',
    expTaxRoundingSetting: 'Round',
    expRoundingSetting: 'Round',
    expAttendanceValidation: true,
    employeeName: 'Sista Aadmi',
    employeeId: 'a0b6D0000017HOtQAM',
    employeeCode: 'TDEMP000',
    departmentName: 'DEPARTMENT QA',
    departmentId: 'a0Z6D0000013O9FUAU',
    departmentCode: 'DEP001',
    customerId: 'TeamS01',
    currencySymbol: 'JPY',
    currencyName: 'Japanese Yen',
    currencyId: 'a0U6D000003ak1nUAA',
    currencyDecimalPlaces: 0,
    currencyCode: 'JPY',
    costCenterName: null,
    costCenterHistoryId: null,
    costCenterCode: null,
    companyName: 'WSP AUTO API',
    companyId: 'a0P6D000001sZhNUAU',
    belongsToResourceGroup: true,
    approver01Name: null,
    allowToChangeApproverSelf: null,
    allowTaxAmountChange: true,
    allowApproveExpInDiffCompany: null,
  },
  ui: {
    dialog: {
      activeDialog: [],
    },
    siteRoute: 'PROJECT_LIST',
    sidebar: 'ACTIVITY',
    mode: 'INITIALIZE',
    filter: {
      project: {
        projectTitle: '',
        projectManager: 'Sista Aadmi',
        statusList: ['Planning', 'InProgress'],
      },
    },
    timeTracking: {
      startDate: '',
      endDate: '',
      viewType: 'week',
    },
    resourceAvailability: {
      limit: 12,
      page: 0,
      viewType: 'day',
      startDate: '',
      endDate: '',
      availableHours: [],
    },
  },
  entities: {
    psa: {
      project: {
        totalRecords: 0,
        totalPages: 0,
        pageSize: 0,
        pageNum: 0,
        pageData: [],
        project: {
          clientId: '',
          code: '',
          companyId: '',
          currentDetailId: '',
          description: '',
          endDate: '',
          pmBaseId: '',
          workTimePerDay: 0,
          name: '',
          projectId: '',
          revisionComment: '',
          startDate: '',
          status: '',
          uniqKey: '',
          calendarId: '',
          workingDaySUN: false,
          workingDayMON: true,
          workingDayTUE: true,
          workingDayWED: true,
          workingDayTHU: true,
          workingDayFRI: true,
          workingDaySAT: false,
        },
      },
      request: {
        totalRecords: 0,
        totalPages: 0,
        pageSize: 0,
        pageNum: 0,
        pageData: [],
        request: {
          endDate: null,
          firstName: '',
          lastName: '',
          projectTitle: '',
          receivedDate: '',
          roleId: '',
          roleTitle: '',
          startDate: '',
          status: '',
        },
      },
      activity: {
        activityList: [],
        activity: {
          activityId: '',
          leadBaseId: '',
          leadName: '',
          plannedEndDate: '',
          plannedStartDate: '',
          status: '',
          title: '',
          projectId: '',
          projectStartDate: '',
          projectName: '',
          projectEndDate: '',
        },
      },
      assignment: {
        assignment: {
          activityId: '',
          projectId: '',
          role: '',
          description: '',
          assignmentId: '',
          assigneePhotoUrl: '',
          assigneeName: '',
          assigneeBaseId: '',
          startDate: '',
          endDate: '',
          numOfWorkDays: '0',
          workTimePerDay: '0',
          totalWorkHours: '0',
          eventId: '',
        },
      },
      role: {
        role: {
          roleId: '',
          activityId: '',
          isActivityLead: false,
          skills: [],
          roleTitle: '',
          jobGradeId: '',
          jobGrade: null,
          jobGrades: [],
          billRate: '0',
          costRate: '0',
          useDefaultRate: false,
          startDate: '',
          endDate: '',
          workingDays: '0',
          maxWorkingTime: '0',
          requiredTime: '0',
          remarks: '',
          status: '',
          assignment: {
            assignmentId: '',
            projectTitle: '',
            activityTitle: '',
            startDate: '',
            endDate: '',
            bookedTimePerDay: [],
            employeeName: '',
            employeePhotoUrl: '',
            strategy: {
              schedulingStrategy: '',
              bookedEffort: '',
              scheduledTimePerDay: '',
            },
          },
          rmId: '',
          rmName: '',
        },
      },
      resource: {
        resourceList: [],
        resource: {
          name: '',
          departmentName: '',
          position: '',
          totalCapacity: '',
          bookedTime: '',
          availableTime: '',
        },
        viewAllResourceList: {
          totalRecords: 0,
          totalPages: 0,
          pageSize: 0,
          pageNum: 0,
          pageData: [],
        },
        resourceIdList: {
          totalRecords: 0,
          ids: [],
        },
        assignmentDetailList: {
          assignments: [],
          employeeBaseId: '',
        },
      },
      timeTracking: {},
      resourceManager: {
        resourceManagerList: [],
      },
      projectManager: {
        projectManagerId: '',
      },
      capabilityInfo: {
        id: '',
        empId: '',
        empCode: '',
        empPhotoUrl: '',
        empName: '',
        empPosition: '',
        empDeptName: '',
        empGrade: '',
        links: [],
        remarks: '',
        skills: [],
        assignments: [],
        projectNum: 0,
        activitiesNum: 0,
      },
    },
    employeeList: [
      {
        id: 'a0b6D0000017HOtQAM',
        displayName: 'Sista Aadmi',
        code: 'TDEMP000',
      },
    ],
    skillsetCategoryList: [],
    jobGradeList: [],
    calendarList: [
      {
        type: 'Attendance',
        remarks: null,
        name_L2: null,
        name_L1: '全社共通カレンダー',
        name_L0: 'Company Calendar',
        name: 'Company Calendar',
        isDefault: true,
        id: 'a0N6D000001Y7PRUA0',
        companyId: 'a0P6D000001sZhNUAU',
        code: 'COM001',
      },
    ],
  },
};

const middlewares = [thunk];
const mockStore = configureMockStore(middlewares);

export default {
  mockStore,
  create: (state: Record<string, any> = initialState) => {
    return mockStore(state);
  },
};
