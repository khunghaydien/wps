import { parse } from 'date-fns';

import { orderEventsOfDay } from '../index';

describe('orderEventsOfDay', () => {
  test('it should order events of a day descending by primary sort key (periodOfWeek)', () => {
    // Arrange
    const events = [
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 4,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 12,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        periodOfWeek: 8,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 10,
        minutes: 1410,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 3,
        minutes: 1439,
        isLessThanDay: false,
      },
    ];
    const expected = [
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 12,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 10,
        minutes: 1410,
        isLessThanDay: false,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        periodOfWeek: 8,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 4,
        minutes: 1439,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 3,
        minutes: 1439,
        isLessThanDay: false,
      },
    ];

    // Run
    // @ts-ignore
    const actual = orderEventsOfDay(events);

    // Assert
    expect(actual).toEqual(expected);
  });

  test('it should order events of a day ascending by secondary sort key (startDateTime)', () => {
    // Arrange
    const events = [
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T00:00:10.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T21:10:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T20:15:59.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T23:59:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:01:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
    ];
    const expected = [
      {
        title: null,
        startDateTime: parse('2019-09-28T00:00:10.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:01:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T20:15:59.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T21:10:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T23:59:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
    ];

    // Run
    // @ts-ignore
    const actual = orderEventsOfDay(events);

    // Assert
    expect(actual).toEqual(expected);
  });

  test('it should order events of a day ascending (dictionary order) by third sort key (title)', () => {
    // Arrange
    const events = [
      {
        title: '2',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '10',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 7,
        isLessThanDay: false,
        minutes: 777,
      },
      {
        title: '20',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        isLessThanDay: false,
        periodOfWeek: 7,
        minutes: 777,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        isLessThanDay: false,
        periodOfWeek: 7,
        minutes: 777,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '1',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
    ];
    const expected = [
      {
        title: null,
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWdAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '1',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '10',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWEAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '2',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrVfAAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: '20',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrW9AAI',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'dddd',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWOAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
      {
        title: 'TEST',
        startDateTime: parse('2019-09-28T15:00:00.000Z'),
        id: 'a172v00000ddrWTAAY',
        periodOfWeek: 7,
        minutes: 777,
        isLessThanDay: false,
      },
    ];

    // Run
    // @ts-ignore
    const actual = orderEventsOfDay(events);

    // Assert
    expect(actual).toEqual(expected);
  });

  test('it should order events properly', () => {
    // Arrange
    const events = [
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '17',
        startDateTime: parse('2020-02-27T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkFRUAY',
        externalEventId: null,
        endDateTime: parse('2020-02-29T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:00:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 3,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        minutes: 0,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '13',
        startDateTime: parse('2020-02-28T14:59:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: false,
        id: 'a0Y7F000008kkF1UAI',
        externalEventId: null,
        endDateTime: parse('2020-02-28T15:01:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:00:00.000Z'),
        isLessThanDay: true,
        hours: 0,
        period: 3,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '18',
        startDateTime: parse('2020-02-28T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkFVUAY',
        externalEventId: null,
        endDateTime: parse('2020-03-01T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-03-01T14:59:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '22',
        startDateTime: parse('2020-02-28T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkHMUAY',
        externalEventId: null,
        endDateTime: parse('2020-03-01T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-03-01T14:59:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '14',
        startDateTime: parse('2020-02-29T14:59:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: 'ジョブ2',
        jobId: 'a0U7F000004bxEsUAI',
        jobCode: 'Job002',
        isOuting: false,
        isOrganizer: true,
        isAllDay: false,
        id: 'a0Y7F000008kkF6UAI',
        externalEventId: null,
        endDateTime: parse('2020-02-29T15:01:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:01:00.000Z'),
        isLessThanDay: true,
        hours: 0,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-02-29T15:01:00.000Z'),
        minutes: 1,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
    ];
    const expected = [
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '17',
        startDateTime: parse('2020-02-27T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkFRUAY',
        externalEventId: null,
        endDateTime: parse('2020-02-29T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:00:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 3,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        minutes: 0,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '18',
        startDateTime: parse('2020-02-28T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkFVUAY',
        externalEventId: null,
        endDateTime: parse('2020-03-01T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-03-01T14:59:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '22',
        startDateTime: parse('2020-02-28T15:00:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: true,
        id: 'a0Y7F000008kkHMUAY',
        externalEventId: null,
        endDateTime: parse('2020-03-01T15:00:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-03-01T14:59:00.000Z'),
        isLessThanDay: false,
        hours: 48,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '13',
        startDateTime: parse('2020-02-28T14:59:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: null,
        jobId: null,
        jobCode: null,
        isOuting: false,
        isOrganizer: true,
        isAllDay: false,
        id: 'a0Y7F000008kkF1UAI',
        externalEventId: null,
        endDateTime: parse('2020-02-28T15:01:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:00:00.000Z'),
        isLessThanDay: true,
        hours: 0,
        period: 3,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-03-01T14:59:59.999Z'),
        minutes: 1439,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
      {
        workCategoryName: null,
        workCategoryId: null,
        title: '14',
        startDateTime: parse('2020-02-29T14:59:00.000Z'),
        ownerId: '0057F000003YWmjQAG',
        location: null,
        jobName: 'ジョブ2',
        jobId: 'a0U7F000004bxEsUAI',
        jobCode: 'Job002',
        isOuting: false,
        isOrganizer: true,
        isAllDay: false,
        id: 'a0Y7F000008kkF6UAI',
        externalEventId: null,
        endDateTime: parse('2020-02-29T15:01:00.000Z'),
        description: null,
        createdServiceBy: 'teamspirit',
        contactName: null,
        contactId: null,
        internalEndDateTime: parse('2020-02-29T15:01:00.000Z'),
        isLessThanDay: true,
        hours: 0,
        period: 2,
        isOverMultipleDays: true,
        isOverMultipleWeeks: true,
        startDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfWeek: parse('2020-02-29T15:00:00.000Z'),
        periodOfWeek: 1,
        startDateTimeOfDay: parse('2020-02-29T15:00:00.000Z'),
        endDateTimeOfDay: parse('2020-02-29T15:01:00.000Z'),
        minutes: 1,
        date: parse('2020-02-29T15:00:00.000Z'),
      },
    ];

    // Run
    // @ts-ignore
    const actual = orderEventsOfDay(events);

    // Assert
    expect(actual).toEqual(expected);
  });
});
