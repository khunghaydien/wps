import { CODE as ATTENTION_CODE } from '@attendance/domain/models/AttDailyAttention';
import { DAY_TYPE } from '@attendance/domain/models/AttDailyRecord';

import { DailyRecord } from '../../BaseAttendanceSummary';
import { COMMUTE_STATE } from '../../CommuteCount';
import { time } from '@apps/attendance/__tests__/helpers';

export const recordDefault: DailyRecord = {
  recordDate: '2020-01-01',
  dayType: DAY_TYPE.Workday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.BOTH_WAYS,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(6, 50),
  endStampTime: time(23, 5),
  outStartTime: time(7),
  outEndTime: time(23),
  insufficientRestTime: null,
  virtualWorkTime: time(8),
  restTime: time(1),
  realWorkTime: time(23) - time(7) - time(1),
  holidayWorkTime: null,
  overTime: time(1),
  nightTime: time(1),
  lostTime: 10,
  remarks:
    'remarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarks',
  attentions: [],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordHasInsufficientRestTime: DailyRecord = {
  recordDate: '2020-01-02',
  dayType: DAY_TYPE.Workday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.BOTH_WAYS,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(16),
  startStampTime: time(6, 50),
  endStampTime: time(16, 5),
  outStartTime: time(7),
  outEndTime: time(16),
  virtualWorkTime: time(8),
  insufficientRestTime: 10,
  restTime: 50,
  realWorkTime: null,
  holidayWorkTime: null,
  overTime: null,
  nightTime: null,
  lostTime: null,
  remarks: 'remarks',
  attentions: [
    {
      code: ATTENTION_CODE.INSUFFICIENT_REST_TIME,
      value: 10,
    },
  ],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordNotWorkingEffectiveWorkingType: DailyRecord = {
  recordDate: '2020-01-03',
  dayType: DAY_TYPE.Workday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.NONE,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(6, 50),
  endStampTime: time(23, 5),
  outStartTime: time(7),
  outEndTime: time(22),
  virtualWorkTime: time(8),
  insufficientRestTime: 0,
  restTime: 60,
  realWorkTime: null,
  holidayWorkTime: null,
  overTime: null,
  nightTime: null,
  lostTime: null,
  remarks:
    'remarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarksremarks',
  attentions: [
    {
      code: ATTENTION_CODE.INEFFECTIVE_WORKING_TIME,
      value: {
        fromTime: time(22),
        toTime: time(23),
      },
    },
  ],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordHasAllAttention: DailyRecord = {
  recordDate: '2020-01-04',
  dayType: DAY_TYPE.Workday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.FORWARD,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(6, 50),
  endStampTime: time(23, 5),
  outStartTime: time(7),
  outEndTime: time(22),
  virtualWorkTime: time(8),
  insufficientRestTime: 10,
  restTime: 50,
  realWorkTime: null,
  holidayWorkTime: null,
  overTime: null,
  nightTime: null,
  lostTime: null,
  remarks: 'remarks',
  attentions: [
    {
      code: ATTENTION_CODE.INEFFECTIVE_WORKING_TIME,
      value: {
        fromTime: time(22),
        toTime: time(23),
      },
    },
    {
      code: ATTENTION_CODE.INSUFFICIENT_REST_TIME,
      value: 10,
    },
  ],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordWorkday: DailyRecord = {
  recordDate: '2020-01-05',
  dayType: DAY_TYPE.Workday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.BACKWARD,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(7) - 10,
  endStampTime: time(23) + 5,
  outStartTime: time(7),
  outEndTime: time(23),
  virtualWorkTime: time(23) - time(7),
  insufficientRestTime: null,
  restTime: 60,
  realWorkTime: time(23) - time(7) - 60,
  holidayWorkTime: null,
  overTime: 60,
  nightTime: 60,
  lostTime: 10,
  remarks: 'remarks',
  attentions: [],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordHoliday: DailyRecord = {
  recordDate: '2020-01-05',
  dayType: DAY_TYPE.Holiday,
  event: 'Event',
  shift: 'Shift',
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  commuteState: COMMUTE_STATE.UNENTERED,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(7) - 10,
  endStampTime: time(23) + 5,
  outStartTime: time(7),
  outEndTime: time(23),
  virtualWorkTime: time(8),
  insufficientRestTime: null,
  restTime: 60,
  realWorkTime: time(23) - time(7) - 60,
  holidayWorkTime: time(23) - time(7),
  overTime: 60,
  nightTime: 60,
  lostTime: 10,
  remarks: 'remarks',
  attentions: [],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const recordLegalHoliday: DailyRecord = {
  recordDate: '2020-01-06',
  dayType: DAY_TYPE.LegalHoliday,
  event: 'Event',
  shift: 'Shift',
  commuteState: COMMUTE_STATE.UNENTERED,
  dailyObjectiveEventLog: 'dailyObjectiveEventLog',
  allowanceDailyRecordCount: 1,
  startTime: time(7),
  endTime: time(23),
  startStampTime: time(7) - 10,
  endStampTime: time(23) + 5,
  outStartTime: time(7),
  outEndTime: time(23),
  virtualWorkTime: time(8),
  insufficientRestTime: null,
  restTime: 60,
  realWorkTime: time(23) - time(7) - 60,
  holidayWorkTime: time(23) - time(7),
  overTime: 60,
  nightTime: 60,
  lostTime: 10,
  remarks: 'remarks',
  attentions: [],
  startTimeModified: false,
  endTimeModified: false,
  isHolLegalHoliday: false,
};

export const records: DailyRecord[] = [
  recordDefault,
  recordHasInsufficientRestTime,
  recordNotWorkingEffectiveWorkingType,
  recordHasAllAttention,
  recordWorkday,
  recordHoliday,
  recordLegalHoliday,
];
